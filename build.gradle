plugins {
    id 'fabric-loom' version '1.3.+'
    id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.mod_version + "-" + getVersionMetadata()
group = project.maven_group

repositories {
    mavenLocal()
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.nucleoid.xyz/" }
    maven { url = "https://maven.gegy.dev/" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Plasmid
    modImplementation "xyz.nucleoid:plasmid:${project.plasmid_version}"
}

String getVersionMetadata() {
    var buildId = System.getenv("GITHUB_RUN_NUMBER")

    // CI builds only
    if (buildId != null) {
        return "build.$buildId"
    }

    // No tracking information could be found about the build
    return "snapshot"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

java {
    withSourcesJar()
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
